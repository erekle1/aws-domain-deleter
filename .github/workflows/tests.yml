name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.3, 8.4]

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, json, curl
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Create test config file
      run: |
        mkdir -p config
        cp env.example config/aws_config.php
        sed -i 's/YOUR_AWS_ACCESS_KEY_ID/test-key/g' config/aws_config.php
        sed -i 's/YOUR_AWS_SECRET_ACCESS_KEY/test-secret/g' config/aws_config.php
        sed -i 's/YOUR_AWS_SESSION_TOKEN/test-token/g' config/aws_config.php

    - name: Run PHPUnit tests
      run: composer run test


  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Create test config file
      run: |
        mkdir -p config
        cp env.example config/aws_config.php
        sed -i 's/YOUR_AWS_ACCESS_KEY_ID/test-key/g' config/aws_config.php
        sed -i 's/YOUR_AWS_SECRET_ACCESS_KEY/test-secret/g' config/aws_config.php
        sed -i 's/YOUR_AWS_SESSION_TOKEN/test-token/g' config/aws_config.php

    - name: Run security audit
      run: composer audit
